name: Flask Server CI with MongoDB

# Ejecutar el workflow en cualquier push a ramas que empiecen con 'ms/'
on:
  push:
    branches:
      - ms/**

jobs:
  flask-and-mongo:
    runs-on: ubuntu-latest

    services:
      mongo:
        image: mongo:4.4  # Usa una versión más estable
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongo --eval 'db.adminCommand(\"ping\")'"
          --health-interval=30s
          --health-timeout=10s
          --health-retries=10

    steps:
      # Configurar los parámetros del kernel
      - name: Set sysctl parameters
        run: |
          sudo sysctl -w vm.max_map_count=16777216
          sudo sysctl -w vm.swappiness=1

      # Paso 1: Clonar el repositorio
      - name: Checkout repository
        uses: actions/checkout@v2

      # Paso 2: Configurar Python
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      # Paso 3: Instalar dependencias de Python
      - name: Install dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install -r requirements.txt

      # Paso 4: Esperar que MongoDB esté listo
      - name: Wait for MongoDB to be ready
        run: |
          for i in {1..20}; do
            if nc -z localhost 27017; then
              echo "MongoDB is up and running"
              break
            fi
            echo "Waiting for MongoDB..."
            sleep 5
          done

      # Paso 5: Crear la base de datos y colección
      - name: Create MongoDB database and collection
        run: |
          mongo localhost:27017/usrs_test --eval 'db.createCollection("usrs")'

      # Paso 6: Iniciar el servidor Flask
      - name: Start Flask server
        run: |
          source venv/bin/activate
          export FLASK_APP=run.py
          flask run --host=0.0.0.0 --port=5000 &
        env:
          FLASK_ENV: development
          MONGO_URI: mongodb://localhost:27017/usrs_test

      # Paso 7: Mantener el servidor Flask corriendo
      - name: Keep server running
        run: |
          sleep 300
